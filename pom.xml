<?xml version="1.0" encoding="UTF-8"?>
<!--suppress ALL-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.14</version>
    <relativePath/>
  </parent>

  <groupId>guru.springframework</groupId>
  <artifactId>mssc-brewery-parent</artifactId>
  <version>1.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>MSSC Brewery</name>

  <properties>
    <!-- General versions -->
    <java.version>11</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <!-- Encodings -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- Dependencies versions -->
    <spring-cloud.version>2021.0.8</spring-cloud.version>
    <jaxb.version>2.3.0</jaxb.version>
    <org.mapstruct.version>1.5.5.Final</org.mapstruct.version>
    <awaitility.version>3.1.6</awaitility.version>
    <mysql.version>8.0.33</mysql.version>
    <guava.version>14.0.1</guava.version>
    <servo-core.version>0.12.21</servo-core.version>

    <!-- Internal versions -->
    <!-- microservices -->
    <beer-service.version>0.4.1-SNAPSHOT</beer-service.version>
    <beer-inventory-service.version>0.4.1-SNAPSHOT</beer-inventory-service.version>
    <beer-order-service.version>0.4.1-SNAPSHOT</beer-order-service.version>
    <!-- cloud -->
    <gateway.version>0.2.1-SNAPSHOT</gateway.version>
    <service-registry.version>0.2.1-SNAPSHOT</service-registry.version>
    <config-server.version>0.2.1-SNAPSHOT</config-server.version>
    <!-- failover -->
    <beer-inventory-failover.version>0.4.1-SNAPSHOT</beer-inventory-failover.version>

    <!-- Auto-versioning -->
    <service.name>mssc-brewery</service.name> <!-- must be override by auto-versioned modules -->
    <service.version>0</service.version> <!-- must be override by auto-versioned modules -->
    <version.phase>none</version.phase> <!-- must be ${version.update.enable} in auto-versioned modules -->
    <version.update.enable>generate-sources</version.update.enable>

    <!-- Docker -->
    <docker.image.prefix>migmolrod</docker.image.prefix>
    <docker.image.name>${project.artifactId}</docker.image.name>
  </properties>

  <licenses>
    <license>
      <name>GNU General Public License v3.0</name>
      <url>https://www.gnu.org/licenses/gpl.txt</url>
    </license>
  </licenses>

  <organization>
    <name>MyM</name>
  </organization>

  <developers>
    <developer>
      <name>Miguel Molinero</name>
      <organization>MyM</organization>
    </developer>
  </developers>

  <modules>
    <module>services</module>
    <module>cloud</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>${jaxb.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-core</artifactId>
        <version>${jaxb.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>${jaxb.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${org.mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${awaitility.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- LOMBOK & MAPSTRUCT -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${org.mapstruct.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Maven plugin for Spring Boot Framework -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <layers>
            <enabled>true</enabled>
            <includeLayerTools>true</includeLayerTools>
          </layers>
        </configuration>
      </plugin>
      <!-- Auto-clean plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <executions>
          <execution>
            <id>auto-clean</id>
            <phase>initialize</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Maven compiler plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${org.mapstruct.version}</version>
            </path>
            <path>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-configuration-processor</artifactId>
              <version>2.1.5.RELEASE</version>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <compilerArg>
              -Amapstruct.defaultComponentModel=spring
            </compilerArg>
          </compilerArgs>
        </configuration>
      </plugin>
      <!-- Maven enforcer plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>enforce</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <banDuplicatePomDependencyVersions/>
                <requireJavaVersion>
                  <version>${java.version}</version>
                </requireJavaVersion>
                <requireMavenVersion>
                  <version>3.8.0</version>
                </requireMavenVersion>
                <requireReleaseDeps>
                  <onlyWhenRelease>true</onlyWhenRelease>
                  <message>Release builds must not have snapshot dependencies</message>
                </requireReleaseDeps>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Maven versioning plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <execution>
            <phase>${version.phase}</phase>
            <goals>
              <goal>set</goal>
            </goals>
            <id>update-version</id>
            <configuration>
              <generateBackupPoms>false</generateBackupPoms>
              <artifactId>${service.name}*</artifactId>
              <newVersion>${service.version}</newVersion>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Docker plugin -->
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.43.4</version>
        <configuration>
          <images>
            <image>
              <name>${docker.image.prefix}/${docker.image.name}</name>
              <alias>${project.artifactId}</alias>
              <build>
                <assembly>
                  <descriptorRef>artifact</descriptorRef>
                </assembly>
                <dockerFile>Dockerfile</dockerFile>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
